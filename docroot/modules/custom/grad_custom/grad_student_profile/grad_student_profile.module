<?php

/**
 * @file
 * Contains the sitenow_student_profile module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\uiowa_core\Element\Card;

/**
 * Implements hook_entity_presave().
 */
function grad_student_profile_entity_presave(EntityInterface $entity) {
  switch ($entity->bundle()) {
    case 'student_profile':
      // Setting the title with the first/last name values.
      $output = $entity->get('field_person_first_name')->value . ' ' . $entity->get('field_person_last_name')->value;
      $entity->setTitle($output);
      break;

  }
}

/**
 * Implements hook_form_alter().
 */
function grad_student_profile_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    // Node form modifications.
    case 'node_student_profile_edit_form':
    case 'node_student_profile_form':
      _sitenow_node_form_defaults($form, $form_state);
      break;

  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function grad_student_profile_preprocess_node(&$variables) {
  if ($variables['view_mode'] === 'card') {
    if (isset($variables['node'])) {
      $referring_item = $variables['node']->_referringItem;
      if ($referring_item) {
        /** @var \Drupal\Core\Field\EntityReferenceFieldItemList $referring_field */
        $referring_field = $referring_item->getParent();
        if ($referring_field) {
          $parent_entity = $referring_field->getParent();
          $parent_entity = $parent_entity->getEntity();
          if ($parent_entity->hasField('field_content_list_items')) {
            /** @var \Drupal\Core\Field\EntityReferenceFieldItemList $er_list */
            $er_list = $parent_entity->field_content_list_items;
            foreach ($er_list->referencedEntities() as $delta => $entity) {
              if ($variables['node']->id() === $entity->id()) {
                $variables['delta'] = $delta;
              }
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_views_view_unformatted().
 */
function grad_student_profile_preprocess_views_view_unformatted(&$variables) {
  if ($variables['view']->id() === 'student_profile_card') {
    /** @var \Drupal\views\ViewExecutable $view */
    $view = $variables['view'];
    $style_plugin = $view->style_plugin;
    foreach ($variables['rows'] as $index => &$row) {
      $row['content']['#type'] = 'card';
      unset($row['content']['#theme']);
      // @todo Check if this is necessary.
      $row['content']['#pre_render'] = [
        [
          Card::class,
          'preRenderCard',
        ],
      ];

      $row['content']['#attributes']['class'] = [
        'card--stacked',
        'card--person',
        'card--centered-left',
        'card--alignment-left',
        'media--border',
      ];

      $mapping = [
        '#media' => 'field_image',
        '#content' => [
          'field_person_education',
          'field_person_hometown',
          'field_grad_program_all_degree',
        ]
      ];

      foreach ($mapping as $prop => $fields) {
        if (!is_array($fields)) {
          $fields = [$fields];
        }
        $row['content'][$prop] = [];
        foreach ($fields as $field_name) {
          // @todo Figure out how to set $allowed_tags per field.
          if (!uiowa_core_html_empty_after_cleanup($style_plugin->getField($index, $field_name), '<img><picture>')) {
            $row['content'][$prop][$field_name] = [
              '#markup' => $style_plugin->getField($index, $field_name),
            ];
          }
        }
      }

      if (!empty($row['content']['#content'])) {
        $row['content']['#attributes']['class'][] = 'card--enclosed';
        $row['content']['#attributes']['class'][] = 'media--medium';
        // @todo Is this necessary?
        $row['content']['#attributes']['class'][] = 'bg--white';
      }
      else {
        $row['content']['#attributes']['class'][] = 'media--large';
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function grad_student_profile_theme($existing, $type, $theme, $path) {
  return [
    'field__node__field_grad_program_all_degree__student_profile__default' => [
      'template' => 'field--node--field-grad-program-all-degree--student-profile--default',
      'base hook' => 'field',
    ],
    'field__node__field_person_bio_headline__student_profile__default' => [
      'template' => 'field--node--field-person-bio-headline--student-profile--default',
      'base hook' => 'field',
    ],
    'field__node__field_person_distinction__student_profile__card' => [
      'template' => 'field--node--field-person-distinction--student-profile--card',
      'base hook' => 'field',
    ],
    'field__node__field_person_distinction__student_profile__default' => [
      'template' => 'field--node--field-person-distinction--student-profile--default',
      'base hook' => 'field',
    ],
    'field__node__field_person_distinction__student_profile__teaser' => [
      'template' => 'field--node--field-person-distinction--student-profile--teaser',
      'base hook' => 'field',
    ],
    'field__node__field_person_quote' => [
      'template' => 'field--node--field-person-quote',
      'base hook' => 'field',
    ],
    'node__student_profile__card' => [
      'template' => 'node--student-profile--card',
      'base hook' => 'field',
    ],
  ];
}
